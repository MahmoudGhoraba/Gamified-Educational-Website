@{
    ViewData["Title"] = "Progress";
    var list = ViewBag.list as List<Spaghetti.Models.QuestsPro>;
    var badges = ViewBag.Badges as List<Spaghetti.Models.BadgesPro>;
}

<div class="container">
    <h1 class="main-title">
        <span class="icon">📊</span>
        Your Progress Overview
    </h1>

    <div class="dashboard-container">
        <!-- Quests Card -->
        <div class="card quests-card">
            <div class="card-header">
                <h2>
                    <span class="icon">🎯</span>
                    Quests
                    <span class="counter-bubble">@list.Count</span>
                </h2>
            </div>
            <div class="card-body">
                <table class="progress-table">
                    <thead>
                    <tr>
                        <th>Quest</th>
                        <th>Progress</th>
                        <th>Status</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var a in list)
                    {
                        <tr class="animate-row">
                            <td class="quest-title">
                                <span class="quest-id">#@a.ID</span>
                                @a.Title
                            </td>
                            <td>
                                <div class="progress-bar">
                                    <div class="progress-fill" style="width: @(a.Status == "Completed" ? "100" : "30")%"></div>
                                </div>
                            </td>
                            <td>
                                    <span class="status-badge @(a.Status.ToLower().Replace(" ", "-"))">
                                        @a.Status
                                    </span>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Badges Card -->
        <div class="card badges-card">
            <div class="card-header">
                <h2>
                    <span class="icon">🏆</span>
                    Achievements
                    <span class="counter-bubble">@badges.Count(b => b.Status == "Earned")/@badges.Count</span>
                </h2>
            </div>
            <div class="card-body">
                <div class="badges-grid">
                    @foreach (var a in badges)
                    {
                        <div class="badge-item @(a.Status.ToLower())">
                            <div class="badge-icon">
                                @if(a.Status == "Earned"){
                                    <div class="ribbon"></div>
                                    @:🥇
                                } else {
                                    @:🔒
                                }
                            </div>
                            <div class="badge-info">
                                <h3>@a.Title</h3>
                                <span class="badge-status">@a.Status</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>

    body {
        font-family: 'Inter', system-ui, -apple-system, sans-serif;
        background: #f8f9fa;
        color: #2d3436;
        line-height: 1.6;
    }

    .container {
        max-width: 1400px;
        padding: 2rem 1rem;
    }

    .main-title {
        text-align: center;
        font-size: 2.5rem;
        margin-bottom: 3rem;
        color: #2d3436;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
    }

    .icon {
        font-size: 1.2em;
    }

    /* Dashboard Layout */
    .dashboard-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 2rem;
    }

    /* Card Styles */
    .card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.3s ease;
    }

    .card:hover {
        transform: translateY(-5px);
    }

    .card-header {
        background: linear-gradient(135deg, #189A3A, #357abd);
        padding: 1.5rem;
        color: white;
    }

    .badges-card .card-header {
        background: linear-gradient(135deg, #117a2d, #d48d1a);
    }

    .card-header h2 {
        margin: 0;
        display: flex;
        align-items: center;
        gap: 1rem;
        font-size: 1.5rem;
    }

    .counter-bubble {
        background: rgba(255, 255, 255, 0.2);
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
        font-size: 0.9em;
    }

    /* Table Styles */
    .progress-table {
        width: 100%;
        border-collapse: collapse;
    }

    .progress-table th,
    .progress-table td {
        padding: 1.2rem;
        text-align: left;
    }

    .progress-table th {
        font-weight: 600;
        border-bottom: 2px solid #eee;
    }

    .progress-table tr:not(:last-child) {
        border-bottom: 1px solid #f0f0f0;
    }

    .quest-title {
        font-weight: 500;
        color: #2d3436;
    }

    .quest-id {
        color: #7f8c8d;
        margin-right: 0.8rem;
    }

    /* Progress Bar */
    .progress-bar {
        background: #eee;
        border-radius: 8px;
        height: 12px;
        overflow: hidden;
    }

    .progress-fill {
        height: 100%;
        background: #189A3A;
        transition: width 0.5s ease;
    }

    /* Status Badges */
    .status-badge {
        display: inline-block;
        padding: 0.4rem 1rem;
        border-radius: 20px;
        font-size: 0.9em;
        font-weight: 500;
    }

    .status-badge.completed {
        background: #2ecc71;
        color: white;
    }

    .status-badge.in-progress {
        background: #f1c40f;
        color: #2d3436;
    }

    /* Badges Grid */
    .badges-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 1.5rem;
        padding: 1rem;
    }

    .badge-item {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        position: relative;
        border: 2px solid #eee;
        transition: all 0.3s ease;
    }

    .badge-item.earned {
        border-color: #2ecc71;
    }

    .badge-icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        position: relative;
    }

    .ribbon {
        position: absolute;
        top: -10px;
        right: -10px;
        width: 40px;
        height: 40px;
        background: #2ecc71;
        transform: rotate(45deg);
        border-radius: 4px;
    }

    .badge-info h3 {
        margin: 0 0 0.5rem 0;
        color: #2d3436;
    }

    .badge-info p {
        color: #7f8c8d;
        font-size: 0.9em;
        margin: 0 0 0.5rem 0;
    }

    .badge-status {
        display: inline-block;
        padding: 0.3rem 0.8rem;
        border-radius: 12px;
        font-size: 0.8em;
        font-weight: 600;
        text-transform: uppercase;
    }

    .badge-item.earned .badge-status {
        background: #2ecc71;
        color: white;
    }

    .badge-item.locked .badge-status {
        background: #eee;
        color: #7f8c8d;
    }

    /* Animations */
    @@keyframes rowEntrance {
        from {
            opacity: 0;
            transform: translateX(20px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .animate-row {
        animation: rowEntrance 0.4s ease forwards;
    }

    @@media (max-width: 768px) {
        .dashboard-container {
            grid-template-columns: 1fr;
        }

        .main-title {
            font-size: 2rem;
        }
    }
</style>